// Code generated by protoc-gen-go.
// source: donor.proto
// DO NOT EDIT!

package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Donor model
type Donor struct {
	Addr          string               `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Id            string               `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name          string               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Total         uint64               `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Contributions []*DonorContribution `protobuf:"bytes,5,rep,name=contributions" json:"contributions,omitempty"`
	Trackings     []*DonorTrack        `protobuf:"bytes,6,rep,name=trackings" json:"trackings,omitempty"`
}

func (m *Donor) Reset()                    { *m = Donor{} }
func (m *Donor) String() string            { return proto.CompactTextString(m) }
func (*Donor) ProtoMessage()               {}
func (*Donor) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Donor) GetContributions() []*DonorContribution {
	if m != nil {
		return m.Contributions
	}
	return nil
}

func (m *Donor) GetTrackings() []*DonorTrack {
	if m != nil {
		return m.Trackings
	}
	return nil
}

// Donor Contribution model
type DonorContribution struct {
	Name              string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SmartContractName string `protobuf:"bytes,2,opt,name=smartContractName" json:"smartContractName,omitempty"`
	SmartContractAddr string `protobuf:"bytes,3,opt,name=smartContractAddr" json:"smartContractAddr,omitempty"`
	Amount            uint64 `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Timestamp         int64  `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *DonorContribution) Reset()                    { *m = DonorContribution{} }
func (m *DonorContribution) String() string            { return proto.CompactTextString(m) }
func (*DonorContribution) ProtoMessage()               {}
func (*DonorContribution) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

// DonorTrack model
type DonorTrack struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AccountName string `protobuf:"bytes,2,opt,name=accountName" json:"accountName,omitempty"`
	AccountAddr string `protobuf:"bytes,3,opt,name=accountAddr" json:"accountAddr,omitempty"`
	Amount      uint64 `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Timestamp   int64  `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *DonorTrack) Reset()                    { *m = DonorTrack{} }
func (m *DonorTrack) String() string            { return proto.CompactTextString(m) }
func (*DonorTrack) ProtoMessage()               {}
func (*DonorTrack) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func init() {
	proto.RegisterType((*Donor)(nil), "protos.Donor")
	proto.RegisterType((*DonorContribution)(nil), "protos.DonorContribution")
	proto.RegisterType((*DonorTrack)(nil), "protos.DonorTrack")
}

func init() { proto.RegisterFile("donor.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x49, 0xff, 0x41, 0xa7, 0x28, 0xec, 0x20, 0x12, 0xc1, 0x43, 0xe9, 0xa9, 0x07, 0x59,
	0x44, 0x1f, 0x40, 0x44, 0xcf, 0x1e, 0x8a, 0x2f, 0x90, 0x6d, 0x17, 0x09, 0x9a, 0x64, 0x49, 0x66,
	0x5f, 0xc6, 0x37, 0xf1, 0x0d, 0x7c, 0x2c, 0x49, 0xb2, 0xd8, 0x2c, 0xdd, 0xd3, 0x9e, 0x9a, 0xf9,
	0xe6, 0x37, 0x33, 0xdf, 0x0c, 0x85, 0x66, 0x32, 0xda, 0xd8, 0xf5, 0xce, 0x1a, 0x32, 0x58, 0x85,
	0x8f, 0xeb, 0x7e, 0x19, 0x94, 0xaf, 0x5e, 0x47, 0x84, 0x42, 0x4c, 0x93, 0xe5, 0xac, 0x65, 0x7d,
	0x3d, 0x84, 0x37, 0x5e, 0x42, 0x26, 0x27, 0x9e, 0x05, 0x25, 0x93, 0x93, 0x67, 0xb4, 0x50, 0x5b,
	0x9e, 0x47, 0xc6, 0xbf, 0xf1, 0x0a, 0x4a, 0x32, 0x24, 0xbe, 0x78, 0xd1, 0xb2, 0xbe, 0x18, 0x62,
	0x80, 0x4f, 0x70, 0x31, 0x1a, 0x4d, 0x56, 0x6e, 0xf6, 0x24, 0x8d, 0x76, 0xbc, 0x6c, 0xf3, 0xbe,
	0x79, 0xb8, 0x89, 0xe3, 0xdd, 0x3a, 0xcc, 0x7c, 0x49, 0x88, 0xe1, 0x98, 0xc7, 0x7b, 0xa8, 0xc9,
	0x8a, 0xf1, 0x53, 0xea, 0x0f, 0xc7, 0xab, 0x50, 0x8c, 0x47, 0xc5, 0xef, 0x3e, 0x3b, 0xcc, 0x50,
	0xf7, 0xc3, 0x60, 0xb5, 0x68, 0xfb, 0x6f, 0x99, 0x25, 0x96, 0xef, 0x60, 0xe5, 0x94, 0xb0, 0x14,
	0x40, 0x31, 0xd2, 0x9b, 0x07, 0xe2, 0x96, 0xcb, 0xc4, 0x82, 0x7e, 0xf6, 0x57, 0xca, 0x4f, 0xd0,
	0x3e, 0x81, 0xd7, 0x50, 0x09, 0x65, 0xf6, 0x9a, 0x0e, 0xf7, 0x38, 0x44, 0x78, 0x0b, 0x35, 0x49,
	0xb5, 0x75, 0x24, 0xd4, 0x8e, 0x97, 0x2d, 0xeb, 0xf3, 0x61, 0x16, 0xba, 0x6f, 0x06, 0x30, 0x6f,
	0x75, 0xd2, 0x74, 0x0b, 0x8d, 0x18, 0x47, 0xdf, 0x2b, 0xb1, 0x9b, 0x4a, 0x09, 0x91, 0x58, 0x4c,
	0xa5, 0xf3, 0xcc, 0x6d, 0xe2, 0xbf, 0xf2, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x93, 0x9c, 0x38,
	0x75, 0x41, 0x02, 0x00, 0x00,
}
